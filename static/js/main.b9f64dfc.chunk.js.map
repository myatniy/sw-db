{"version":3,"sources":["components/header.js","components/header-button-section.js","services/swapi-service.js","components/spinner.js","components/error-indicator.js","components/item-details.js","components/item-list.js","components/app-routes.js","components/app.js","index.js"],"names":["Header","className","to","Component","HeaderButtonSection","buttons","map","el","key","toString","toLowerCase","SwapiService","_hostname","getFilm","id","a","getResource","film","_transformFilmData","getFilmImg","getAllFilms","res","results","_extractId","director","openingCrawl","opening_crawl","producer","releaseDate","release_date","title","getPerson","person","_transformPersonData","getPersonImg","getAllPeople","birthYear","birth_year","eyeColor","eye_color","gender","hairColor","hair_color","height","mass","name","skinColor","skin_color","getPlanet","planet","_transformPlanetData","getPlanetImg","getAllPlanets","climate","diameter","gravity","orbitalPeriod","orbital_period","population","rotationPeriod","rotation_period","surfaceWater","surface_water","terrain","getSpecies","species","_transformSpeciesData","getSpeciesImg","getAllSpecies","averageHeight","average_height","averageLifespan","average_lifespan","classification","designation","eyeColors","eye_colors","hairColors","hair_colors","language","skinColors","skin_colors","getStarship","starship","_transformStarshipData","getStarshipImg","getAllStarships","MGLT","cargoCapacity","cargo_capacity","consumables","costInCredits","cost_in_credits","crew","hyperdriveRating","hyperdrive_rating","manufacturer","maxAtmospheringSpeed","max_atmosphering_speed","model","passengers","starshipClass","starship_class","getVehicle","vehicle","_transformVehicleData","getVehicleImg","getAllVehicles","vehicleClass","vehicle_class","url","fetch","ok","Error","status","json","item","match","Spinner","ErrorIndicator","Record","itemData","label","value","ItemDetails","swapiService","state","loading","error","imgUrl","onError","setState","this","getItemData","prevProps","props","itemId","getData","getImgUrl","then","catch","alt","src","React","Children","children","child","cloneElement","ItemList","itemList","listItems","renderItem","onClick","onListItemClicked","renderListItems","AppRoutes","selectedItemIdPeople","selectedItemIdFilms","selectedItemIdPlanets","selectedItemIdSpecies","selectedItemIdStarships","selectedItemIdVehicles","window","location","pathname","path","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9f64dfc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/header.css\";\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header-container\">\r\n                <Link to=\"/\">Star Wars Database</Link>\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./css/header-button-section.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HeaderButtonSection = () => {\r\n    const buttonsValue = [\r\n        \"People\",\r\n        \"Films\",\r\n        \"Starships\",\r\n        \"Vehicles\",\r\n        \"Species\",\r\n        \"Planets\",\r\n    ];\r\n    const buttons = buttonsValue.map((el) => (\r\n        <li key={el.toString()}>\r\n            <Link to={`/${el.toString().toLowerCase()}`}>{el}</Link>\r\n        </li>\r\n    ));\r\n\r\n    return <ul className=\"header-button-section\">{buttons}</ul>;\r\n};\r\n\r\nexport default HeaderButtonSection;\r\n","export default class SwapiService {\r\n  _hostname = `https://swapi.dev/api`;\r\n\r\n  async getResource(url) {\r\n    const res = await fetch(url);\r\n\r\n    if (!res.ok)\r\n      throw new Error(`Can't fetch: ${url}, status code: ${res.status}`);\r\n\r\n    return res.json();\r\n  }\r\n\r\n  _extractId(item) {\r\n    const idRegExp = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(idRegExp)[1];\r\n  }\r\n\r\n  getFilm = async (id) => {\r\n    const film = await this.getResource(`${this._hostname}/films/${id}/`);\r\n    return this._transformFilmData(film);\r\n  };\r\n\r\n  getFilmImg = ({ id }) =>\r\n    `https://starwars-visualguide.com/assets/img/films/${id}.jpg`;\r\n\r\n  getAllFilms = async () => {\r\n    const res = await this.getResource(`${this._hostname}/films/`);\r\n    return res.results.map(this._transformFilmData);\r\n  };\r\n\r\n  _transformFilmData = (film) => {\r\n    return {\r\n      id: this._extractId(film),\r\n      director: film.director,\r\n      openingCrawl: film.opening_crawl,\r\n      producer: film.producer,\r\n      releaseDate: film.release_date,\r\n      title: film.title,\r\n    };\r\n  };\r\n\r\n  getPerson = async (id) => {\r\n    const person = await this.getResource(`${this._hostname}/people/${id}/`);\r\n    return this._transformPersonData(person);\r\n  };\r\n\r\n  getPersonImg = ({ id }) =>\r\n    `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`;\r\n\r\n  getAllPeople = async () => {\r\n    const res = await this.getResource(`${this._hostname}/people/`);\r\n    return res.results.map(this._transformPersonData);\r\n  };\r\n\r\n  _transformPersonData = (person) => {\r\n    return {\r\n      id: this._extractId(person),\r\n      birthYear: person.birth_year,\r\n      eyeColor: person.eye_color,\r\n      gender: person.gender,\r\n      hairColor: person.hair_color,\r\n      height: person.height,\r\n      mass: person.mass,\r\n      name: person.name,\r\n      skinColor: person.skin_color\r\n    };\r\n  };\r\n\r\n  getPlanet = async (id) => {\r\n    const planet = await this.getResource(`${this._hostname}/planets/${id}/`);\r\n    return this._transformPlanetData(planet);\r\n  };\r\n\r\n  getPlanetImg = ({ id }) =>\r\n    `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`;\r\n\r\n  getAllPlanets = async () => {\r\n    const res = await this.getResource(`${this._hostname}/planets/`);\r\n    return res.results.map(this._transformPlanetData);\r\n  };\r\n\r\n  _transformPlanetData = (planet) => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      climate: planet.climate,\r\n      diameter: planet.diameter,\r\n      gravity: planet.gravity,\r\n      name: planet.name,\r\n      orbitalPeriod: planet.orbital_period,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      surfaceWater: planet.surface_water,\r\n      terrain: planet.terrain,\r\n    };\r\n  };\r\n\r\n  getSpecies = async (id) => {\r\n    const species = await this.getResource(`${this._hostname}/species/${id}/`);\r\n    return this._transformSpeciesData(species);\r\n  };\r\n\r\n  getSpeciesImg = ({ id }) =>\r\n    `https://starwars-visualguide.com/assets/img/species/${id}.jpg`;\r\n\r\n  getAllSpecies = async () => {\r\n    const res = await this.getResource(`${this._hostname}/species/`);\r\n    return res.results.map(this._transformSpeciesData);\r\n  };\r\n\r\n  _transformSpeciesData = (species) => {\r\n    return {\r\n      id: this._extractId(species),\r\n      averageHeight: species.average_height,\r\n      averageLifespan: species.average_lifespan,\r\n      classification: species.classification,\r\n      designation: species.designation,\r\n      eyeColors: species.eye_colors,\r\n      hairColors: species.hair_colors,\r\n      language: species.language,\r\n      name: species.name,\r\n      skinColors: species.skin_colors,\r\n    };\r\n  };\r\n\r\n  getStarship = async (id) => {\r\n    const starship = await this.getResource(\r\n      `${this._hostname}/starships/${id}/`\r\n    );\r\n    return this._transformStarshipData(starship);\r\n  };\r\n\r\n  getStarshipImg = ({ id }) =>\r\n    `https://starwars-visualguide.com/assets/img/starships/${id}.jpg`;\r\n\r\n  getAllStarships = async () => {\r\n    const res = await this.getResource(`${this._hostname}/starships/`);\r\n    return res.results.map(this._transformStarshipData);\r\n  };\r\n\r\n  _transformStarshipData = (starship) => {\r\n    return {\r\n      id: this._extractId(starship),\r\n      MGLT: starship.MGLT,\r\n      cargoCapacity: starship.cargo_capacity,\r\n      consumables: starship.consumables,\r\n      costInCredits: starship.cost_in_credits,\r\n      crew: starship.crew,\r\n      hyperdriveRating: starship.hyperdrive_rating,\r\n      manufacturer: starship.manufacturer,\r\n      maxAtmospheringSpeed: starship.max_atmosphering_speed,\r\n      model: starship.model,\r\n      name: starship.name,\r\n      passengers: starship.passengers,\r\n      starshipClass: starship.starship_class,\r\n    };\r\n  };\r\n\r\n  getVehicle = async (id) => {\r\n    const vehicle = await this.getResource(`${this._hostname}/vehicles/${id}/`);\r\n    return this._transformVehicleData(vehicle);\r\n  };\r\n\r\n  getVehicleImg = ({ id }) =>\r\n    `https://starwars-visualguide.com/assets/img/vehicles/${id}.jpg`;\r\n\r\n  getAllVehicles = async () => {\r\n    const res = await this.getResource(`${this._hostname}/vehicles/`);\r\n    return res.results.map(this._transformVehicleData);\r\n  };\r\n\r\n  _transformVehicleData = (vehicle) => {\r\n    return {\r\n      id: this._extractId(vehicle),\r\n      cargoCapacity: vehicle.cargo_capacity,\r\n      consumables: vehicle.consumables,\r\n      costInCredits: vehicle.cost_in_credits,\r\n      crew: vehicle.crew,\r\n      manufacturer: vehicle.manufacturer,\r\n      maxAtmospheringSpeed: vehicle.max_atmosphering_speed,\r\n      model: vehicle.model,\r\n      name: vehicle.name,\r\n      passengers: vehicle.passengers,\r\n      vehicleClass: vehicle.vehicle_class,\r\n    };\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./css/spinner.css\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-spinner-pdqcfp9n8ef\">\r\n            <div className=\"ldio-cwn5hlkih9i\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\n\r\nconst ErrorIndicator = () => (\r\n    <p>Something when wrong while data fetching from the server</p>\r\n);\r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from \"react\";\r\nimport SwapiService from \"../services/swapi-service\";\r\nimport Spinner from \"./spinner\";\r\nimport ErrorIndicator from \"./error-indicator\";\r\n\r\nconst Record = ({ itemData, label, value }) => {\r\n    return (\r\n        <li>\r\n            {label}: {itemData[value]}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport { Record };\r\n\r\nexport default class ItemDetails extends Component {\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        itemData: null,\r\n        loading: false,\r\n        error: false,\r\n        imgUrl: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getItemData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.itemId !== prevProps.itemId) {\r\n            this.getItemData();\r\n        }\r\n    }\r\n\r\n    getItemData() {\r\n        this.setState({ loading: true });\r\n\r\n        const { itemId, getData, getImgUrl } = this.props;\r\n\r\n        if (!itemId) return;\r\n\r\n        getData(itemId)\r\n            .then((item) => {\r\n                this.setState({\r\n                    itemData: item,\r\n                    imgUrl: getImgUrl(item),\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { itemData, imgUrl, error, loading } = this.state;\r\n\r\n        if (!itemData) {\r\n            return (\r\n                <div className=\"item-details-container\">\r\n                    <p>Select a character from the list above</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (error) {\r\n            return (\r\n                <div className=\"item-details-container\">\r\n                    <ErrorIndicator />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (loading) {\r\n            return (\r\n                <div className=\"item-details-container\">\r\n                    <Spinner />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const { name } = itemData;\r\n\r\n        return (\r\n            <div className=\"item-details-container\">\r\n                <img alt={name} src={imgUrl} />\r\n                <ul>\r\n                    {React.Children.map(this.props.children, (child) => {\r\n                        return React.cloneElement(child, { itemData });\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport SwapiService from \"../services/swapi-service\";\r\nimport Spinner from \"./spinner\";\r\n\r\nexport default class ItemList extends Component {\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        itemList: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { getData } = this.props;\r\n\r\n        getData().then((itemList) => {\r\n            this.setState({\r\n                itemList,\r\n            });\r\n        });\r\n    }\r\n\r\n    renderListItems(listItems) {\r\n        return listItems.map((item) => {\r\n            const { id } = item;\r\n            const value = this.props.renderItem(item);\r\n            return (\r\n                <li key={id} onClick={() => this.props.onListItemClicked(id)}>\r\n                    {value}\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { itemList } = this.state;\r\n\r\n        if (!itemList) {\r\n            return (\r\n                <ul className=\"item-list-container\">\r\n                    <Spinner />\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <ul className=\"item-list-container\">\r\n                {this.renderListItems(itemList)}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ItemDetails, { Record } from \"./item-details\";\r\nimport ItemList from \"./item-list\";\r\nimport SwapiService from \"../services/swapi-service\";\r\n\r\nexport default class AppRoutes extends Component {\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        selectedItemIdPeople: null,\r\n        selectedItemIdFilms: null,\r\n        selectedItemIdPlanets: null,\r\n        selectedItemIdSpecies: null,\r\n        selectedItemIdStarships: null,\r\n        selectedItemIdVehicles: null,\r\n    };\r\n\r\n    onListItemClicked = (id) => {\r\n        const windowLocationPathname = window.location.pathname;\r\n\r\n        switch (windowLocationPathname) {\r\n            case \"/people\":\r\n                this.setState({ selectedItemIdPeople: id });\r\n                break;\r\n            case \"/films\":\r\n                this.setState({ selectedItemIdFilms: id });\r\n                break;\r\n            case \"/starships\":\r\n                this.setState({ selectedItemIdStarships: id });\r\n                break;\r\n            case \"/vehicles\":\r\n                this.setState({ selectedItemIdVehicles: id });\r\n                break;\r\n            case \"/species\":\r\n                this.setState({ selectedItemIdSpecies: id });\r\n                break;\r\n            case \"/planets\":\r\n                this.setState({ selectedItemIdPlanets: id });\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Route path=\"/sw-db\" exact>\r\n                    <div className=\"welcome\">\r\n                        <h2>Welcome to the small Star Wars wiki.</h2>\r\n                    </div>\r\n                </Route>\r\n\r\n                <Route path=\"/people\">\r\n                    <ItemList\r\n                        onListItemClicked={this.onListItemClicked}\r\n                        getData={this.swapiService.getAllPeople}\r\n                        renderItem={(item) => item.name}\r\n                    />\r\n                    <ItemDetails\r\n                        itemId={this.state.selectedItemIdPeople}\r\n                        getData={this.swapiService.getPerson}\r\n                        getImgUrl={this.swapiService.getPersonImg}\r\n                    >\r\n                        <Record label=\"Name\" value=\"name\" />\r\n                        <Record label=\"Birth year\" value=\"birthYear\" />\r\n                        <Record label=\"Eye color\" value=\"eyeColor\" />\r\n                        <Record label=\"Gender\" value=\"gender\" />\r\n                        <Record label=\"Hair color\" value=\"hairColor\" />\r\n                        <Record label=\"Height\" value=\"height\" />\r\n                        <Record label=\"Mass\" value=\"mass\" />\r\n                        <Record label=\"Skin color\" value=\"skinColor\" />\r\n                    </ItemDetails>\r\n                </Route>\r\n\r\n                <Route path=\"/films\">\r\n                    <ItemList\r\n                        onListItemClicked={this.onListItemClicked}\r\n                        getData={this.swapiService.getAllFilms}\r\n                        renderItem={(item) => item.title}\r\n                    />\r\n                    <ItemDetails\r\n                        itemId={this.state.selectedItemIdFilms}\r\n                        getData={this.swapiService.getFilm}\r\n                        getImgUrl={this.swapiService.getFilmImg}\r\n                    >\r\n                        <Record label=\"Title\" value=\"title\" />\r\n                        <Record label=\"Director\" value=\"director\" />\r\n                        <Record label=\"Producer\" value=\"producer\" />\r\n                        <Record label=\"Release date\" value=\"releaseDate\" />\r\n                        <Record label=\"Opening crawl\" value=\"openingCrawl\" />\r\n                    </ItemDetails>\r\n                </Route>\r\n\r\n                <Route path=\"/starships\">\r\n                    <ItemList\r\n                        onListItemClicked={this.onListItemClicked}\r\n                        getData={this.swapiService.getAllStarships}\r\n                        renderItem={(item) => item.name}\r\n                    />\r\n                    <ItemDetails\r\n                        itemId={this.state.selectedItemIdStarships}\r\n                        getData={this.swapiService.getStarship}\r\n                        getImgUrl={this.swapiService.getStarshipImg}\r\n                    >\r\n                        <Record label=\"Name\" value=\"name\" />\r\n                        <Record label=\"MGLT\" value=\"MGLT\" />\r\n                        <Record label=\"Cargo capacity\" value=\"cargoCapacity\" />\r\n                        <Record label=\"Consumables\" value=\"consumables\" />\r\n                        <Record label=\"Cost in credits\" value=\"costInCredits\" />\r\n                        <Record label=\"Crew\" value=\"crew\" />\r\n                        <Record\r\n                            label=\"Hyperdrive rating\"\r\n                            value=\"hyperdriveRating\"\r\n                        />\r\n                        <Record label=\"Manufacturer\" value=\"manufacturer\" />\r\n                        <Record\r\n                            label=\"Max atmosphering speed\"\r\n                            value=\"maxAtmospheringSpeed\"\r\n                        />\r\n                        <Record label=\"Model\" value=\"model\" />\r\n                        <Record label=\"Passengers\" value=\"passengers\" />\r\n                        <Record label=\"Starship Class\" value=\"starshipClass\" />\r\n                    </ItemDetails>\r\n                </Route>\r\n\r\n                <Route path=\"/vehicles\">\r\n                    <ItemList\r\n                        onListItemClicked={this.onListItemClicked}\r\n                        getData={this.swapiService.getAllVehicles}\r\n                        renderItem={(item) => item.name}\r\n                    />\r\n                    <ItemDetails\r\n                        itemId={this.state.selectedItemIdVehicles}\r\n                        getData={this.swapiService.getVehicle}\r\n                        getImgUrl={this.swapiService.getVehicleImg}\r\n                    >\r\n                        <Record label=\"Name\" value=\"name\" />\r\n                        <Record label=\"Cargo capacity\" value=\"cargoCapacity\" />\r\n                        <Record label=\"Consumables\" value=\"consumables\" />\r\n                        <Record label=\"Cost in credits\" value=\"costInCredits\" />\r\n                        <Record label=\"Crew\" value=\"crew\" />\r\n                        <Record label=\"Manufacturer\" value=\"manufacturer\" />\r\n                        <Record\r\n                            label=\"Max atmosphering speed\"\r\n                            value=\"maxAtmospheringSpeed\"\r\n                        />\r\n                        <Record label=\"Model\" value=\"model\" />\r\n                        <Record label=\"Passengers\" value=\"passengers\" />\r\n                        <Record label=\"Vehicle Class\" value=\"vehicleClass\" />\r\n                    </ItemDetails>\r\n                </Route>\r\n\r\n                <Route path=\"/species\">\r\n                    <ItemList\r\n                        onListItemClicked={this.onListItemClicked}\r\n                        getData={this.swapiService.getAllSpecies}\r\n                        renderItem={(item) => item.name}\r\n                    />\r\n                    <ItemDetails\r\n                        itemId={this.state.selectedItemIdSpecies}\r\n                        getData={this.swapiService.getSpecies}\r\n                        getImgUrl={this.swapiService.getSpeciesImg}\r\n                    >\r\n                        <Record label=\"Name\" value=\"name\" />\r\n                        <Record label=\"Average height\" value=\"averageHeight\" />\r\n                        <Record\r\n                            label=\"Average lifespan\"\r\n                            value=\"averageLifespan\"\r\n                        />\r\n                        <Record label=\"Classification\" value=\"classification\" />\r\n                        <Record label=\"Designation\" value=\"designation\" />\r\n                        <Record label=\"Eye colors\" value=\"eyeColors\" />\r\n                        <Record label=\"Hair colors\" value=\"hairColors\" />\r\n                        <Record label=\"Language\" value=\"language\" />\r\n                        <Record label=\"Skin color\" value=\"skinColors\" />\r\n                    </ItemDetails>\r\n                </Route>\r\n\r\n                <Route path=\"/planets\">\r\n                    <ItemList\r\n                        onListItemClicked={this.onListItemClicked}\r\n                        getData={this.swapiService.getAllPlanets}\r\n                        renderItem={(item) => item.name}\r\n                    />\r\n                    <ItemDetails\r\n                        itemId={this.state.selectedItemIdPlanets}\r\n                        getData={this.swapiService.getPlanet}\r\n                        getImgUrl={this.swapiService.getPlanetImg}\r\n                    >\r\n                        <Record label=\"Name\" value=\"name\" />\r\n                        <Record label=\"Climate\" value=\"climate\" />\r\n                        <Record label=\"Diameter\" value=\"diameter\" />\r\n                        <Record label=\"Orbital period\" value=\"orbitalPeriod\" />\r\n                        <Record label=\"Population\" value=\"population\" />\r\n                        <Record\r\n                            label=\"Rotation period\"\r\n                            value=\"rotationPeriod\"\r\n                        />\r\n                        <Record label=\"Surface water\" value=\"surfaceWater\" />\r\n                        <Record label=\"Terrain\" value=\"terrain\" />\r\n                    </ItemDetails>\r\n                </Route>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./header\";\r\nimport \"./css/app.css\";\r\nimport HeaderButtonSection from \"./header-button-section\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport AppRoutes from \"./app-routes\";\r\n\r\nexport default class App extends Component {\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"app-container\">\r\n                    <Header />\r\n                    <HeaderButtonSection />\r\n                    <AppRoutes />\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}